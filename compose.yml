services:
  db-backup:
    build: .
    container_name: db-backup
    env_file: .env
    volumes:
      - ./backup/scripts:/app/scripts
      - ./backup/logs:/app/logs
      - ./backup/local_backups:/app/local_backups
    entrypoint: ["/app/scripts/backup_cron.sh"]
    restart: on-failure
    networks:
      - default
      - backup

  pg-verify-db:
    image: postgres:16-alpine
    container_name: pg-verify-db
    hostname: pg-verify-db
    environment:
      POSTGRES_USER: ${TEST_DB_USER}
      POSTGRES_PASSWORD: ${TEST_DB_PASSWORD}
      POSTGRES_DB: ${TEST_DB_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure
    networks:
      - default

  db-verify:
    build: .
    container_name: db-verify
    env_file: .env
    volumes:
      - ./backup/logs:/app/logs
      - ./backup/local_backups:/app/local_backups
      - ./backup/scripts:/app/scripts
    entrypoint: ["/app/scripts/verify_cron.sh"]
    restart: on-failure
    depends_on:
      pg-verify-db:
        condition: service_healthy
    networks:
      - default

networks:
  default:
  backup:
    name: backup
    external: true
